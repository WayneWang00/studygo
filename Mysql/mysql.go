package main
import (
	"database/sql"
	"fmt"
	_ "github.com/go-sql-driver/mysql"
	"util/errcode"
)
func insertData(db *sql.DB) { //插入数据
	stmt, err := db.Prepare("insert into userinfo (username,departname,created) values (?,?,?)") //Prepare creates a prepared statement for later queries or executions.
	checkErr(err)
	res, err := stmt.Exec("wuyue", "测试部门", "2016-03-02") //Exec executes a prepared statement with the given arguments and returns a Result summarizing the effect of the statement.
	checkErr(err)
	id, err := res.LastInsertId() //LastInsertId returns the integer generated by the database in response to a command.
	checkErr(err)
	fmt.Println("Last insert id :", id)
}
func updateData(db *sql.DB) { //更新数据
	stmt, err := db.Prepare("update userinfo set departname=? where uid=?")
	checkErr(err)
	res, err := stmt.Exec("研发部门", 1)
	checkErr(err)
	affect, err := res.RowsAffected() //RowsAffected returns the number of rows affected by an
	// update, insert, or delete.
	checkErr(err)
	fmt.Println("受影响的行数 : ", affect)
}
func selectData(db *sql.DB) { //查询数据
	rows, err := db.Query("select * from userinfo")
	checkErr(err)
	for rows.Next() {
		var uid int
		var username string
		var departname string
		var created string
		err := rows.Scan(&uid, &username, &departname, &created)
		checkErr(err)
		fmt.Printf("uid : %d\n", uid)
		fmt.Printf("username : %s\n", username)
		fmt.Printf("departname : %s\n", departname)
		fmt.Printf("created : %s\n", created)
	}
}
func deleteData(db *sql.DB) { //删除数据
	stmt, err := db.Prepare("delete from userinfo where uid=?")
	checkErr(err)
	res, err := stmt.Exec(1)
	checkErr(err)
	affect, err := res.RowsAffected()
	checkErr(err)
	fmt.Println("删除的行数:", affect)
}
func main() {
	db, err := sql.Open("mysql", "root:123@/test?charset=utf8") //打开mysql数据库连接，并返回一个数据库句柄
	checkErr(err)
	insertData(db)
	updateData(db)
	selectData(db)
	deleteData(db)
	err = db.Close() //Close closes the database, releasing any open resources.
	checkErr(err)
}
func checkErr(err error) {
	if err != nil {
		fmt.Println(errcode.MysqlCode(err))
	}
}
